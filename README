A set of utilities for testing Tor performance. Currently they are
unfinished and not documented.

Contents
--------

 trivsocks-client.c: Very simple HTTP client, which downloads a file
  via SOCKS 4a/5 and outputs timing information
 util.c: Utility functions for trivsocks-client.c
 util.h: Utility function declarations for trivsocks-client.c

 Makefile: Builds and tests trivsocks-client

[run_test.py: Script to automate running of trivsocks-client -- defect]
[plot_results.R: Plot the results from run_test.py -- defect]

 measurements-HOWTO: Instructions for setting up Torperf
 example_start-tors_fastslow.txt: Example start script for Torperfs with
  custom guard node selection
 extra_stats.py: Tor controller that prints out details of the circuits
  used for Torperf measurements
 entrycons.py: (optional) Tor controller that influences guard node
  selection
 analyze_guards.py: Script to check whether custom guard node was working
  as expected
 consolidate_stats.py: Script to merge the two output data files with
  performance data and path data

 LICENSE: The Tor license (3-clause BSD)
 README: This file

Subdirectory /metrics
------------ --------

A set of utilities for filtering and graphing Tor performance data.

 filter.R: filters torperf data and prepares it for graphing
 timematrix.R: graphs tordata for interpretation and visualization
 HOWTO: documentation and examples
